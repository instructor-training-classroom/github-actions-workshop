name: Multiple Jobs with Dependencies

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  # First job: Build the application
  build:
    name: Build Application
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'
      
      - name: Restore dependencies
        run: dotnet restore
      
      - name: Build application
        run: dotnet build --configuration Release --no-restore
      
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: MyApp/bin/Release/net9.0/
          retention-days: 1

  # Second job: Run tests (depends on build)
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    needs: build
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'
      
      - name: Restore dependencies
        run: dotnet restore
      
      - name: Run unit tests
        run: dotnet test --configuration Release --no-restore --verbosity normal
      
      - name: Generate test report
        if: always()
        run: echo "Test execution completed"

  # Third job: Code quality check (depends on build, runs in parallel with test)
  code-quality:
    name: Code Quality Analysis
    runs-on: ubuntu-latest
    needs: build
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'
      
      - name: Run code analysis
        run: echo "Running code quality checks..."
      
      - name: Check formatting
        run: dotnet format --verify-no-changes --verbosity diagnostic || echo "Format check complete"
      
      - name: Security scan
        run: echo "Performing security scan..."

  # Fourth job: Deploy (depends on both test and code-quality)
  deploy:
    name: Deploy Application
    runs-on: ubuntu-latest
    needs: [test, code-quality]
    
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts
          path: ./deploy
      
      - name: Prepare deployment
        run: |
          echo "Preparing deployment package..."
          ls -la ./deploy
      
      - name: Deploy to staging
        run: echo "Deploying to staging environment..."
      
      - name: Run smoke tests
        run: echo "Running smoke tests on staging..."
      
      - name: Deployment complete
        run: echo "✅ Deployment completed successfully!"

  # Fifth job: Notify (depends on deploy, runs after everything)
  notify:
    name: Notification
    runs-on: ubuntu-latest
    needs: deploy
    if: always()
    
    steps:
      - name: Check workflow status
        run: |
          echo "Workflow execution completed"
          echo "Status: ${{ needs.deploy.result }}"
      
      - name: Send notification
        run: |
          if [ "${{ needs.deploy.result }}" == "success" ]; then
            echo "✅ Sending success notification..."
          else
            echo "❌ Sending failure notification..."
          fi
